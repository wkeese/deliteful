.d-combobox {
	display: inline-block;
	position: relative;
	vertical-align: middle;
	margin: 0;
	padding: 0;
	/* Setting pointer cursor on root node, input node, and arrow pseudo-element */
	/* is needed such that the cursor works in all desktop browsers for both */
	/* the input and the arrow.*/ 
	cursor: pointer;
	.d-combobox-styles();
	
	&::after {
		/* dropdown arrow */
		content: "\25BC";
		display: inline-block;
		position: absolute;
		padding: 0;
		cursor: pointer;
		line-height: normal;
		.d-combobox-arrow-styles();
	}
	&::after[disabled] {
		cursor: auto;
	}
	&.d-rtl::after {
		.d-combobox-arrow-styles-rtl();
	}
	&[dir="rtl"]::after {
		.d-combobox-arrow-styles-rtl();
	}
}

.d-combobox[disabled] {
	cursor: auto;
	opacity: 0.5;
}

.d-combo-popup {
	/* Needed for the correct layout of its LinearLayout child */
	display: block;
}

/* Applies to both the input inside the root node and the input */
/* conditionally present inside the popup */
.d-combobox-input {
	.d-combobox-input-styles;
	color: inherit;
	font-family: inherit;
	font-size: inherit;
	line-height: normal;
	
	&[disabled],
	fieldset[disabled] & {
		opacity: 0.5;
		cursor: auto;
	}
}

/* Applies to the input inside the root node but does not apply */
/* to the input conditionally present inside the popup */
.d-combobox .d-combobox-input {
	height: 100%;
	vertical-align: inherit;
	cursor: pointer;
	
	/* Necessary for Safari on iOS to avoid misplacement of the dropdown arrow */
	/* due to the presence of the hidden input which stores the submitted value.*/
	margin: 0;
}

.d-combobox .d-combobox-list-hidden {
	display: none;
}
